@using InCaseIForgetMyCrochet.Models;
@using InCaseIForgetMyCrochet.Shared;


@if (Pattern is not null)
{
    <table class=" gap-3 my-3 w-100">
        @foreach (var row in Pattern.Rows)
        {
            <tr class="d-flex w-100">
                <ul>
                    <td class="col-1">
                        <button class="btn btn-danger" type="button" style="padding:.5rem 1rem;"
                            @onclick="@(async () => await RemoveRow(row))">X</button>
                    </td>
                    <div id="@(row.Id)" class="d-flex flex-row w-100" style="position:relative;" row-context>
                        <SortableList Id="@($"{row.Id}-stitch-row")" Items="row.Instructions"
                            OnUpdate="@(((int oldIndex, int newIndex) indices) => SortList(indices, row.Instructions))"
                            Context="instruction">
                            <SortableItemTemplate>
                                <td style="position:relative;">
                                    <button class="btn-danger" style="
                                height:2rem;
                                width:2rem;
                                position:absolute;
                                bottom:50%;
                                left:50%;"
                                        @onclick="@(async() => {row.Instructions.Remove(instruction); await Pattern.SaveChangesAsync(Context);})">
                                        <i class="bi bi-trash" />
                                    </button>
                                    <span class="d-flex rounded-pill" style="
                            background:@(instruction.StitchType.ToPastelColor());
                            cursor:default;
                            height:2.5rem;
                            place-content:center;
                            place-items:center;
                            place-self:center;
                            width:2.5rem;
                            z-index:0;">
                                        @instruction.StitchType
                                    </span>
                                </td>
                            </SortableItemTemplate>
                        </SortableList>
                        <label for="@(row.Id)" class="btn-outline-light p-2 text-center text-dark" style="
                        background: #0001;
                        border-radius:10rem;
                        font-size:.8rem;
                        position:absolute;
                        left:0%;
                        top:10%;
                        transform: translate(-50%, -50%);">
                            n:@row.Instructions.Count
                        </label>
                    </div>
                    <td class="col-1">
                        <button class="btn btn-info text-nowrap" @onclick="@(async () => await AddStitchBundle(row))">
                            @StitchAmount @StitchType
                        </button>
                    </td>
                </ul>
            </tr>
        }
    </table>
}